#!/usr/bin/env bash

DEPS_DIR=${HOME}/.dependencies

# fetch dependencies
if [ ! -d "${DEPS_DIR}" ]; then
    echo "Creating dependency directory ${DEPS_DIR}"
  mkdir ${DEPS_DIR}
fi

fetch_repo() {
  REPO_NAME=$(echo $1 | cut -d/ -f2)
  if [ ! -d "${DEPS_DIR}/${REPO_NAME}" ]; then
    echo "Installing dependency $1"
    git clone "https://github.com/$1.git" "${DEPS_DIR}/${REPO_NAME}"
  else
    echo "Updating dependency $1"
    cd "${DEPS_DIR}/${REPO_NAME}"
    git pull
    cd - > /dev/null
  fi
  echo ""
}

fetch_repo tarjoilija/zgen
fetch_repo stark/siji
fetch_repo vivien/i3blocks
fetch_repo powerline/fonts
fetch_repo DaveDavenport/rofi

# symlink dotfiles
DOTFILES_ROOT=$(pwd)
set -e
echo ''

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1 "
}

indent () {
  printf "\r\n         $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then
        skip=true;
      else

        user "File already exists: ${dst}"
        indent "(linking to $(basename "${src}"))"
        indent "What do you want to do?"
        indent "[s]kip, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all, [q]uit?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          q )
            exit;;
          * )
            ;;
        esac
      fi
    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$DOTFILES_ROOT" -maxdepth 3 -name '*.symlink')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

install_dotfiles

echo ''
echo '  All installed!'
